{
  "env": {
      "browser": true,
      "es6": true,
      "node": true
  },
  "extends": "esnext/style-guide",
  // "extends": [
  //     "eslint:recommended",
  //     "plugin:react/recommended",
  //     "plugin:@typescript-eslint/eslint-recommended"
  // ],
  // "globals": {
  //     "Atomics": "readonly",
  //     "SharedArrayBuffer": "readonly"
  // },
  // "parser": "@typescript-eslint/parser",
  // "parserOptions": {
  //     "ecmaFeatures": {
  //         "jsx": true
  //     },
  //     "ecmaVersion": 2018,
  //     "sourceType": "module"
  // },
  // "plugins": [
  //     "react",
  //     "@typescript-eslint"
  // ],
  "rules": {
    // Каждое правило принимает тип оповещения о себе (2 или error, 1 или warn, 0 или off(не оповещать)) и непосрественно сами аргументы для правида.
    // Правило обеспечивает согласованный стиль отступов. В данном примере 2 пробела.
    "indent": [2, 2], // оповещать как ошибку
    // Правило обеспечивает последовательное использование точек с запятой.
    "semi": [2, "always"], // оповещать как ошибку
    // Правило обеспечивает согласованный стиль привязки для блоков.
    "brace-style": [2, "1tbs"], // оповещать как ошибку
    // Правило направлено на устранение неиспользуемых переменных, функций и параметров функций.
    "no-unused-vars": [1], // оповещать как предупреждение
    // Разрешим вывод в консоль (используйте это правило только при разработке).
    "no-console": [0],
    // запретить дублирование аргументов в определениях "функции"
    "no-dupe-args": [2],
    // запретить пустые блочные операторы "extends": "eslint:recommended"
    "no-empty": [2],
    // не допускайте ненужных скобок
    "no-extra-parens": [2, "all"],
    // запретить ненужные точки с запятой "extends": "eslint:recommended"
    "no-extra-semi": [2],
    // запретить переназначение деклараций "функций" "eslint:recommended"
    "no-func-assign": [2],
    // принудительно применять методы класса, использующие `this`
    "class-methods-use-this": [2],
    // требует, чтобы операторы return либо всегда, либо никогда не указывали значения
    "consistent-return": [0],
    // применение согласованного стиля скобок для всех управляющих операторов
    "curly": [0],
    // требуйте использования ` = = = ' и `!==`
    "eqeqeq": [1, "always"],
    "no-empty-function": [1],
    // запретить использование нескольких пробелов
    "no-multi-spaces": [2],
    // не регламентированы глобальные переменные
    "no-restricted-globals": [2, "evt"],
    // запретить или принудительно использовать пробелы внутри блоков после открытия блока и перед закрытием блока
    "block-spacing": [2, "never"],
    // соблюдение именования camelcase
    "camelcase": [0],
    // обеспечьте согласованное расстояние между запятыми до и после них
    "comma-spacing": [2, { "before": false, "after": true }],
    // требовать или запрещать новую строку в конце файлов
    "eol-last": [2, "always"],
    // требовать или запрещать интервал между идентификаторами функций и их вызовами
    "func-call-spacing": [2, "never"],
    // принудительное выполнение разрывов строк между аргументами вызова функции
    "function-call-argument-newline": [2, "never"],
    // запретить пробелы перед свойствами
    "no-whitespace-before-property": [2],
    // переменные должны быть объявлены либо вместе, либо отдельно
    "one-var": [2, "never"],
    // использовать единый linebreak для операторов
    "operator-linebreak": [2, "none"],
    // согласованном использовании обратные кавычки, двойные или одинарные кавычки
    "quotes": [1, "double"],
    // расположение точек с запятой
    "semi-style": [2, "last"],
    // обеспечение согласованного интервала между точками с запятой до и после них
    "semi-spacing": [2],
    // определение согласованного интервала внутри круглых скобок
    "space-in-parens": [2, "never"],
    "linebreak-style": [0],
    "array-bracket-spacing": [2, "never"],
    "space-before-function-paren": [2, "never"],
    "prefer-const": [2]
  }
}